#
# zbrewsetenv: set up environment for configuration scripts
# IMPORTANT NOTE: zbrewsetenv needs to be SOURCED rather than just run, e.g. 
# Run the script as:
#   . zbrewsetenv
# as opposed to:
#   zbrewsetenv
#
#set -x
`whence sh >/dev/null 2>&1`
if [ $? -eq 0 ]; then
	abspath() {
		pgm="$1"
		relpgm=`whence ${pgm}`
		rc=$?
		if [ $rc -eq 0 ]; then
			abspath="$( cd "$( dirname "${relpgm}" )" >/dev/null 2>&1 && pwd )"
			echo "${abspath}"
		fi
		return $rc
	}
else
	abspath() {
		pgm="$1"
                typeinfo=`type -a "${pgm}" 2>/dev/null`
		rc=$?
		if [ $rc -eq 0 ]; then
                        relpgm=`echo "${typeinfo}" | awk '{ print $3; exit }'`
			abspath="$( cd "$( dirname "${relpgm}" )" >/dev/null 2>&1 && pwd )"
                        rc=$?
			echo "${abspath}"
		fi
                return $rc
	}
fi

zbrewdir=`abspath zbrew`
if [ $? -gt 0 ]; then
	echo "zbrewsetenv: zbrew needs to be in your PATH before setting up your environment" >&2
	return 4
fi
zbrewroot="${zbrewdir%/*}"

. zbrewinternalfuncs
. zbrewexternalfuncs

export mydir=$(callerdir ${0})

if ! [ -d "${ZBREW_WORKROOT}" ]; then
	echo "zbrewsetenv: ZBREW_WORKROOT must point to the zbrew work root directory" >&2
	return 4
fi

props="${ZBREW_WORKROOT}/props/zbrewglobalprops.json"
zbrewpropse zbr100 "props" "${props}"

export ZBREW_ROOT=${zbrewroot}
if `undefinedProperty "${ZBREW_REPOROOT}"` ; then
	reporoot="${zbrewroot%/*}"
	ZBREW_REPOROOT="${reporoot}"
fi
